MEMORY {
ZP:  start = $0002, size = $0070, type = rw, define = yes;
LOADADDR: start = $07ff, size = $2, file = %O;
EXEHDR: start = $0801, size = $0c, file = %O;
RAM: start = $080d, size = $cfff-$0801, file = %O, define = yes;
}
SEGMENTS {
LOADADDR: load = LOADADDR, type = ro;
EXEHDR:   load = EXEHDR, type = ro;
STARTUP:  load = RAM, type = ro, define = yes;
LOWCODE:  load = RAM, type = ro,               optional = yes;
INIT:     load = RAM, type = ro, define = yes, optional = yes;
CODE:     load = RAM, type = ro;
RODATA:   load = RAM, type = ro;
DATA:     load = RAM, type = rw, define = yes;
BSS:      load = RAM, type = bss, define = yes;
HEAP:     load = RAM, type = bss, optional = yes, define = yes;
ZEROPAGE: load = ZP,  type = zp;
}
FEATURES {
CONDES: segment = INIT,
type = constructor,
label = __CONSTRUCTOR_TABLE__,
count = __CONSTRUCTOR_COUNT__;
CONDES: segment = RODATA,
type = destructor,
label = __DESTRUCTOR_TABLE__,
count = __DESTRUCTOR_COUNT__;
CONDES: type = interruptor,
segment = RODATA,
label = __INTERRUPTOR_TABLE__,
count = __INTERRUPTOR_COUNT__;
}
SYMBOLS {
__STACKTOP__: type = weak, value = $cfff;
}



